version: '2.0'

services:
  node1.onezone:
    image: onedata/onezone:18.02.0-beta1
    hostname: node1.onezone.
    # dns: 8.8.8.8 # uncomment if container can't ping any domain
    container_name: onezone-1
    volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"
        # configuration persistence
        - "/opt/onezone/persistence:/volumes/persistence"
        # OpenId configuration
        #- "${AUTH_PATH}:/var/lib/oz_worker/auth.config"
        # Server SSL certificates
        - "/etc/letsencrypt/live/${FQDN}/privkey.pem:/etc/op_panel/certs/web_key.pem"
        - "/etc/letsencrypt/live/${FQDN}/cert.pem:/etc/op_panel/certs/web_cert.pem"
        - "/etc/letsencrypt/live/${FQDN}/chain.pem:/etc/op_panel/certs/web_chain.pem"
        # Additional, trusted CA certificates (any filename is accepted)
        #- "${OZ_CACERTS_PATH}:/etc/oz_panel/cacerts/customCaBundle.pem"
    ports:
      - "53:53"
      - "53:53/udp"
      - "80:80"
      - "443:443"
      - "6666:6666"
      - "9443:9443"
    environment:
      #ONEPANEL_DEBUG_MODE: "true" # prevents container exit on configuration error
      ONEPANEL_BATCH_MODE: "true"
      ONEPANEL_LOG_LEVEL: "none" # prints logs to stdout (possible values: none, debug, info, error), by default set to info
      ONEZONE_CONFIG: |
        cluster:
          domainName: "onezone."
          autoDeploy: true
          nodes:
            n1:
              hostname: "node1"
          managers:
            mainNode: "n1"
            nodes:
              - "n1"
          workers:
            nodes:
              - "n1"
          databases:
            nodes:
              - "n1"
        onezone:
          name: "${ZONE_NAME}"
          domainName: "onezone"
        onepanel:
          users:
            "admin":
              password: "$ADMIN_PASSWORD"
              userRole: "admin"
